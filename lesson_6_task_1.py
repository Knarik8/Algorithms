"""
1). Подсчитать, сколько было выделено памяти под переменные в ранее разработанных программах в рамках первых трех уроков.
Проанализировать результат и определить программы с наиболее эффективным использованием памяти.
"""
# Найти сумму n элементов следующего ряда чисел: 1, -0.5, 0.25, -0.125,…
# Количество элементов (n) вводится с клавиатуры.

import sys

#1 вариант через цикл

n = int(input("Введите количество элементов: "))
el = 1
sum_ = 0
for i in range(n):
    sum_ += el
    el = el / 2 * (-1)
    i = i + 1
print(sum_)

a = [n, el, sum_]
def total_size():
    el_size = 0
    for j in a:
        el_size += sys.getsizeof(j)
    return el_size

print(total_size())  #46


# 2 вариант через рекурсию

# def sum_2(n):
#     if n == 1:
#         return n
#     elif n > 1:
#         return 1 + sum_2(n - 1) / 2 * (-1)
#
# print(sys.getsizeof(sum_2(3)))   #16


# 3 вариант с геометрической прогрессией

# n = int(input("Введите количество элементов: "))
# result = 1 * (1 - (-0.5) ** n) / (1 - (-0.5))
#
# a = [n, result]
# def total_size():
#     el_size = 0
#     for j in a:
#         el_size += sys.getsizeof(j)
#     return el_size
#
# print(total_size()) #30
#

#1 вариант через цикл занимает 46 байт, # 2 вариант через рекурсию 16 байт, # 3 вариант с геометрической прогрессией 30 байт
#Вывод получается очень логичный: чем меньше переменных, тем меньше памяти занимает код. Вариант с рекурсией самый экономичный.

# Python 3.8.5
# PyCharm 2020.1.2
# Windows 10, 64-разрядная ОС, x64